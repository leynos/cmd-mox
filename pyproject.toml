[project]
name = "cmd-mox"
version = "0.1.0"
description = "cmd-mox package"
readme = "README.md"
requires-python = ">=3.11"
license = { text = "ISC" }
authors = [{ name = "Payton McIntosh", email = "pmcintosh@df12.net" }]
dependencies = []

[dependency-groups]
dev = [
    "pytest",
	"pytest-xdist",
    "ruff",
    "pytest-timeout",
    "pytest-bdd",
    "parse_type",
]

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
    "F",        # Pyflakes rules
    "W",        # PyCodeStyle warnings
    "E",        # PyCodeStyle errors
    "I",        # Sort imports properly
    "UP",       # Warn if certain things can changed due to newer Python versions
    "C4",       # Catch incorrect use of comprehensions, dict, list, etc
    "FA",       # Enforce from __future__ import annotations
    "ISC",      # Good use of string concatenation
    "ICN",      # Use common import conventions
    "RET",      # Good return practices
    "SIM",      # Common simplification rules
    "TID",      # Some good import practices
    "TC",       # Enforce importing certain types in a TYPE_CHECKING block
    "PTH",      # Use pathlib instead of os.path
    "TD",       # Be diligent with TODO comments
    "A",        # detect shadowed builtins
    "BLE",      # disallow catch-all exceptions
    "S",        # disallow things like "exec"; also restricts "assert" but I just NOQA it when I really need it
    "DTZ",      # require strict timezone manipulation with datetime
    "FBT",      # detect boolean traps
    "N",        # enforce naming conventions, e.g. ClassName vs function_name
    "FURB",
    "B",
    "RUF",
    "LOG",
    "Q",
    "PT",
    "RSE",
    "PERF",
    "TRY",
    "D",
    "ANN",
]
extend-select = [
    "C90",     # Enforce cyclomatic complexity limits
    "PLR0913", # Restrict the number of function arguments
]
ignore = ["D205"]

[tool.ruff.lint.per-file-ignores]
"**/test_*.py" = ["S101", "PLR0913"]
"tests/steps/*.py" = ["PLR0913"]

[tool.ruff.lint.mccabe]
max-complexity = 9

[tool.ruff.lint.pylint]
max-args = 4

[tool.ruff.lint.flake8-import-conventions]
# Declare the banned `from` imports.
banned-from = [
    "typing",
    "datetime",
    "collections.abc",
    "dataclasses",
    "enum",
    "msgspec",
]

[tool.ruff.lint.flake8-import-conventions.aliases]
datetime = "dt"
dataclasses = "dc"
"collections.abc" = "cabc"
"msgspec.json" = "msgspec_json"

[tool.ruff.lint.pydocstyle]
# Enforce NumPy docstring style
convention = "numpy"

[tool.pytest.ini_options]
# Tests automatically killed after seconds elapsed
timeout = 30

[tool.uv]
package = true


[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
exclude = ["features"]

